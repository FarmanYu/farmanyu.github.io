<!DOCTYPE html>
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<style>
body,div{margin:0px;padding:0px;}
body{
  background-color:#eee;
}
.c1{
 border:3px #bb3627 outset; 
 background:-webkit-gradient(linear, left top, right bottom, color-stop(0%,#efc9c5), color-stop(50%,#bb3627), color-stop(50%,#d2594c), color-stop(100%,#f1998f));
} 
.c2{
 border:3px #4cd24c outset; 
 background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#c5efc5), color-stop(50%,#4cd24c), color-stop(51%,#27bb27), color-stop(100%,#8ff18f)); 
}
.c3{
 border:3px #4247d8 outset; 
 background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#d0d1f2), color-stop(50%,#4247d8), color-stop(51%,#6f72db), color-stop(100%,#a6a9f4));
}
.c4{
 border:3px #727272 outset;
 background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#dadada), color-stop(50%,#727272), color-stop(51%,#909090), color-stop(100%,#c1c1c1));
}
.c5{
 border:3px #f355f3 outset;
 background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#fbd3fb), color-stop(50%,#f355f3), color-stop(51%,#f47af4), color-stop(100%,#fcb2fc));
}
.c6{
 border:3px #e1e1e1 outset;
 background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#ffffff), color-stop(50%,#f1f1f1), color-stop(51%,#e1e1e1), color-stop(100%,#f6f6f6)); 
}
.c7{
 border:3px #e9de07 outset;
 background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#fefaae), color-stop(50%,#f1e831), color-stop(51%,#e9de07), color-stop(100%,#fbf35b)); 
}
#tb{
  float:left;
  border-spacing:0;
  border:2px gray inset;
}
#tb td{
  box-sizing:border-box;
  width:24px;
  height:24px;
}
#tb .htd{
  width:0px;
  height:0px;
  padding:0px;
  margin:0px;
}
#pan{
  float:left;
  width:124px;
  height:100%;  
}
#lab_lev,#lab_score{
  margin-top:10px;
  width:100%;
  font-size:36px;
  font-weight:bold;
  color:rgb(192,192,192);
  text-shadow:-4px -4px 8px black;
  text-align:center;
}
#lev,#score{
 text-align:center;
 width:100%;
 font-size:36px;
 font-weight:bold;
 text-shadow:-4px -4px 8px black;
 color:red;
}
#pre{
  margin:8px auto;
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(0,0,0,0.65)), color-stop(100%,rgba(0,0,0,0)));
  border:1px gray inset;
}
#pre td{
  box-sizing:border-box;
  width:16px;
  height:16px;
}
#ter{
  margin:0px auto;
  text-align:center;
  overflow:hidden;
  width:420px;
  border:4px gray inset;
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(125,126,125,1)), color-stop(100%,rgba(14,14,14,1)));  
}
#btn_pau,#btn_res{
  margin-top:20px;
  width:100px;
  height:30px;
  font-size:20px;
  font-weight:bold;
  color: rgb(128,128,128);
  text-shadow: -2px -2px 0 #fff,1px 1px 0 #333,1px 1px 0 #444;
  background: -webkit-gradient(linear, left top, right bottom, color-stop(0%,#ffffff), color-stop(50%,#f1f1f1), color-stop(51%,#e1e1e1), color-stop(100%,#f6f6f6)); 
}
</style>
<body>
 <div id="ter">
   <!--游戏操作区-->
   <table id="tb"></table>
   <!--操作区右边面板-->
	<div id="pan">
	  <div id="lab_lev">Level</div>
	  <div id="lev">0</div>
	  <div id="lab_score">Score</div>
	  <div id="score">0</div>
    <!--预览区-->
	  <table id="pre"></table>
	  <input type="button" id="btn_res" value="Reset" onclick="location.reload()" /><br>
      <input type="button" id="btn_pau" value="Pause" onclick="javascript:this.value=['Start','Pause'][G.np=!G.np|0]" />
	</div>	
 </div>
</body>
<script>
  var G={
   //所有的砖块数据
   sData:[[0x4444,0xf00],[0x4620,0x6c0],[0x2640,0xc60],[0x6600],[0x6220,0x1700,0x2230,0x740],[0x6440,0xe20,0x44c0,0x8e00],[0x4e00,0x4640,0xe40,0x4c40]],
   //操作区数据
   map:[0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xc003,0xffff,0xffff],  
   //初始化
   init:function(){
    for(var i=0;i<22;i++)
	{
	  var tr = document.createElement("tr");
	  for(var j=0;j<16;j++)
	  {
	    var td = document.createElement("td");		
		if(i>19||j<2||j>13)td.className="htd";
	    tr.appendChild(td);
	  }	  	  
	  tb.appendChild(tr);
    }
    //初始化预览方块	  
	for(var i=0;i<4;i++)
	{
	  var tr = document.createElement("tr");
	  for(var j=0;j<4;j++)
	  {
        var td = document.createElement("td");
	    tr.appendChild(td);
	  }
	  pre.appendChild(tr);
	}
	//绑定按键事件
	document.onkeydown=function(e){
	  G.keyHandler(e);
	}
	this.score = this.level = 0;
	this.np = 1;
   },
   //检查是否可以移动到r,c位置
   canMoveTo:function(r,c,data)
   {     
     if(c>12)return false;
     for(var i=0;i<4;i++)
	 {	   
       var d1 = ((data>>((3-i)<<2)&0xf)<<(12-c)),
	       d2 = this.map[r+i];
	   //判断是否可移动
	   if((d1|d2)!=(d1^d2))return false;	
	 }
	 return true;
   },
   //移动到r行c列
   moveTo:function(r,c,data)
   {
     if(this.canMoveTo(r,c,data))
	 { 	   
	   this.cData = data;
	   this.r = r;
	   this.c = c;
	 }
	 else{	 
	   //无法继续向下移动
	   if(r>this.r)
	   {
	     for(var cr = 0;cr<4;cr++)
		 {
		   var tr = this.r+cr,
               d =  (data>>((3-cr)<<2)&0xf);
		   if(tr<0||tr>19)continue;
           this.map[tr]|= d<<(12-c);
		   for(var cc = 0;cc<4;cc++)
			 {
               var m= (d>>(3-cc))&0x1,
			       ct = this.c+cc;
               if(m)tb.rows[tr].cells[ct].className = this.col;
			 }
		   if(this.canClear(tr)){		   
             this.clearLine(tr);
		   }		   
		 }         
	     this.createBlock();		
	   }
	 }
	 this.render();
   },
   //处理按键事件
   keyHandler:function(e)
   {
      switch(e.keyCode)
	  {
	    case 38:
		  this.i = (this.i+1)%this.sData[this.t].length;
		  this.moveTo(this.r,this.c,this.sData[this.t][this.i]);
          break;
        case 40:
          this.moveTo(this.r+1,this.c,this.cData);
          break;
        case 37:
          this.moveTo(this.r,this.c-1,this.cData);
         break;
        case 39:
          this.moveTo(this.r,this.c+1,this.cData);
		 break;
	  }       
   },
   //判断第x行是否可消除
   canClear:function(x)
   {
     return x<20&&this.map[x]==0xffff;
   },
   //消除第x行
   clearLine:function(x)
   {
     this.map.splice(x,1);
	 this.map.splice(0,0,0xc003);
	 this.score++;
	 this.level = this.score/20|0;
   },
   //绘制
   render:function()
   {
     var cs ="";
	 //绘制背景
     for(var i=0;i<20;i++)
	 {
	   for(var j=2;j<14;j++)
	   {
		   cs = this.map[i]&(1<<(15-j));
		   if(!cs)tb.rows[i].cells[j].className="";		  
           var tr = i-this.r,
		       tc = j-this.c;
		   //绘制移动砖块
		   if(tr>=0&&tr<4&&tc>=0&&tc<4&&(((this.cData>>((3-tr)<<2)&0xf)>>(3-tc))&0x1))
		   {  
		     tb.rows[i].cells[this.c+tc].className=this.col;  
		   }		
	   }	   
	 }
	//绘制预览砖块
    for(var i=0;i<4;i++)
	 {	
	   for(var j=0;j<4;j++)
	   {	      
	      var b = (((this.nCData>>((3-i)<<2)&0xf)>>(3-j))&0x1);
          pre.rows[i].cells[j].className = b?this.nCol:"";
	   }		  
	 }
	 //绘制分数
	 document.getElementById("score").innerText=this.score;
     //绘制级别
	 document.getElementById("lev").innerText=this.level;
   },
   //产生随机砖块
   randBlock:function()
   {
      this.t = this.nt;
	  this.i = this.ni;
	  this.col = this.nCol;
	  this.cData = this.nCData;
	  this.nt = (Math.random()*this.sData.length|0);
	  this.ni = (Math.random()*this.sData[this.nt].length|0);
	  this.nCol = "c"+(Math.random()*7+1|0);
	  this.nCData = this.sData[this.nt][this.ni];	  
   },
   //产生新的砖块
   createBlock:function()
   {
      this.randBlock();
	  var i = 0;
	  while(!(this.cData>>(i<<2)&0xf))i++;
	  this.r = i-4;
	  this.c = 6;
	  if(!this.canMoveTo(this.r+1,this.c,this.cData))
	  {
	     alert("Game Over!");
		 this.stop();
         document.onkeydown = null;
	  }
   },
   //主循环
   main:function()
   {           
      //如果没有暂停
      if(!this.np)return;
      this.moveTo(this.r+1,this.c,this.cData);
   },
   start:function()
   {
     this.init();
	 this.randBlock();
	 this.createBlock();
     this.hd = setInterval(function(){
	   G.main();
	 },60*(10-this.level));
   },
   stop:function()
   {
     clearInterval(this.hd);
   }
  }  
  G.start(); 
</script>
</html>